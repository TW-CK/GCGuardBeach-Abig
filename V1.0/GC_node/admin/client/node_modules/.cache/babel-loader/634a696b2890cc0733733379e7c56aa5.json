{"remainingRequest":"F:\\Worker\\abig_GCGuardBeach\\V1.0\\GC_node\\client\\node_modules\\babel-loader\\lib\\index.js!F:\\Worker\\abig_GCGuardBeach\\V1.0\\GC_node\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\Worker\\abig_GCGuardBeach\\V1.0\\GC_node\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Worker\\abig_GCGuardBeach\\V1.0\\GC_node\\client\\src\\views\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\Worker\\abig_GCGuardBeach\\V1.0\\GC_node\\client\\src\\views\\Register.vue","mtime":1571365862537},{"path":"F:\\Worker\\abig_GCGuardBeach\\V1.0\\GC_node\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Worker\\abig_GCGuardBeach\\V1.0\\GC_node\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\Worker\\abig_GCGuardBeach\\V1.0\\GC_node\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Worker\\abig_GCGuardBeach\\V1.0\\GC_node\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport https from \"../https\";\nexport default {\n  data: function data() {\n    var _this = this;\n\n    var validatePass = function validatePass(rule, value, callback) {\n      if (value === \"\") {\n        callback(new Error(\"请输入密码\"));\n      } else {\n        if (_this.formValidate.psw2 !== \"\") {\n          _this.$refs.formValidate.validateField(\"psw2\");\n        }\n\n        callback();\n      }\n    };\n\n    var validatePass2 = function validatePass2(rule, value, callback) {\n      if (value === \"\") {\n        callback(new Error(\"请再次输入密码\"));\n      } else if (value !== _this.formValidate.psw) {\n        callback(new Error(\"两次输入密码不一致!\"));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      formValidate: {\n        name: \"\",\n        mail: \"\",\n        psw: \"\",\n        psw2: \"\"\n      },\n      ruleValidate: {\n        name: [{\n          required: true,\n          message: \"不能为空\",\n          trigger: \"blur\"\n        }],\n        mail: [{\n          required: true,\n          message: \"不能为空\",\n          trigger: \"blur\"\n        }, {\n          type: \"email\",\n          message: \"请输入正确邮箱\",\n          trigger: \"change\" | \"blur\"\n        }],\n        psw: [{\n          required: true,\n          message: \"请输入密码\",\n          trigger: \"blur\"\n        }, {\n          min: 6,\n          max: 20,\n          message: \"请输入6-20位字符\",\n          trigger: \"blur\"\n        }, {\n          validator: validatePass,\n          trigger: \"blur\"\n        }],\n        psw2: [{\n          required: true,\n          message: \"请再次输入密码\",\n          trigger: \"blur\"\n        }, {\n          validator: validatePass2,\n          trigger: \"blur\",\n          required: true\n        }]\n      },\n      spinShow: false\n    };\n  },\n  methods: {\n    handleSubmit: function handleSubmit(name) {\n      var _this2 = this;\n\n      this.$refs[name].validate(function (valid) {\n        if (valid) {\n          console.log(_this2.formValidate);\n          var params = {\n            name: _this2.formValidate.name,\n            email: _this2.formValidate.mail,\n            password: _this2.formValidate.psw\n          };\n          var headers = {// \"Content-Type\": \"application/x-www-form-urlencoded\"\n          };\n          _this2.spinShow = true;\n\n          try {\n            https.fetchPost(\"/api/oauthUsers/register\", params, headers).then(function (data) {\n              if (data.data.msg == -1) {\n                _this2.$Message.error(\"已存在该用户,请登录\");\n\n                _this2.spinShow = false;\n              } else {\n                _this2.$Message.success(\"已发到后台审核\");\n\n                setTimeout(function () {\n                  _this2.$router.push({\n                    path: \"/login\"\n                  });\n                }, 1000);\n              }\n            }).catch(function (err) {\n              console.log(err);\n            });\n          } catch (err) {\n            console.log(err);\n          }\n        } else {\n          _this2.$Message.error(\"按照要求输入\");\n        }\n      });\n    },\n    handleRegister: function handleRegister(name) {\n      this.$router.push({\n        path: \"/login\"\n      });\n    }\n  }\n};",{"version":3,"sources":["Register.vue"],"names":[],"mappings":"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","sourcesContent":["<style scoped>\r\n.login_form {\r\n  width: 30%;\r\n  margin: 5% auto;\r\n  padding-bottom: 50px;\r\n}\r\n.login_form .form {\r\n  position: relative;\r\n  top: 30px;\r\n}\r\n.login_form img {\r\n  width: 80%;\r\n  margin-left: 20px;\r\n}\r\n.login_form_01 {\r\n  font-size: 30px;\r\n  text-align: center;\r\n  margin-block-end: 30px;\r\n  font-family: \"PingFang SC\";\r\n}\r\n</style>>\r\n<template>\r\n  <div class=\"wrap\">\r\n    <Card class=\"login_form\">\r\n      <!-- <div class=\"login_form_01\">登录</div> -->\r\n      <p slot=\"title\">注册</p>\r\n      <img src=\"../assets/logo.png\" />\r\n\r\n      <div class=\"form\">\r\n        <Form ref=\"formValidate\" :model=\"formValidate\" :rules=\"ruleValidate\" :label-width=\"80\">\r\n          <FormItem label=\"姓名\" prop=\"name\">\r\n            <Input v-model=\"formValidate.name\" placeholder=\"请输入您的姓名\"></Input>\r\n          </FormItem>\r\n          <FormItem label=\"邮箱\" prop=\"mail\">\r\n            <Input v-model=\"formValidate.mail\" placeholder=\"请输入您的邮箱\"></Input>\r\n          </FormItem>\r\n          <FormItem label=\"密码\" prop=\"psw\">\r\n            <Input type=\"password\" v-model=\"formValidate.psw\" placeholder=\"请输入您的密码\"></Input>\r\n          </FormItem>\r\n          <FormItem label=\"确认密码\" prop=\"psw2\">\r\n            <Input type=\"password\" v-model=\"formValidate.psw2\" placeholder=\"请再次输入您的密码\"></Input>\r\n          </FormItem>\r\n          <FormItem>\r\n            <Button type=\"primary\" @click=\"handleSubmit('formValidate')\">注册</Button>\r\n            <Button @click=\"handleRegister('formValidate')\" style=\"margin-left: 80px\">已存在账号</Button>\r\n          </FormItem>\r\n        </Form>\r\n      </div>\r\n    </Card>\r\n    <Spin size=\"large\" fix v-if=\"spinShow\"></Spin>\r\n  </div>\r\n</template>\r\n<script>\r\nimport https from \"../https\";\r\n\r\nexport default {\r\n  data() {\r\n    var validatePass = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"请输入密码\"));\r\n      } else {\r\n        if (this.formValidate.psw2 !== \"\") {\r\n          this.$refs.formValidate.validateField(\"psw2\");\r\n        }\r\n        callback();\r\n      }\r\n    };\r\n    var validatePass2 = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"请再次输入密码\"));\r\n      } else if (value !== this.formValidate.psw) {\r\n        callback(new Error(\"两次输入密码不一致!\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      formValidate: {\r\n        name: \"\",\r\n        mail: \"\",\r\n        psw: \"\",\r\n        psw2: \"\"\r\n      },\r\n      ruleValidate: {\r\n        name: [\r\n          {\r\n            required: true,\r\n            message: \"不能为空\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        mail: [\r\n          {\r\n            required: true,\r\n            message: \"不能为空\",\r\n            trigger: \"blur\"\r\n          },\r\n          {\r\n            type: \"email\",\r\n            message: \"请输入正确邮箱\",\r\n            trigger: \"change\" | \"blur\"\r\n          }\r\n        ],\r\n        psw: [\r\n          {\r\n            required: true,\r\n            message: \"请输入密码\",\r\n            trigger: \"blur\"\r\n          },\r\n          { min: 6, max: 20, message: \"请输入6-20位字符\", trigger: \"blur\" },\r\n          {\r\n            validator: validatePass,\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        psw2: [\r\n          {\r\n            required: true,\r\n            message: \"请再次输入密码\",\r\n            trigger: \"blur\"\r\n          },\r\n          {\r\n            validator: validatePass2,\r\n            trigger: \"blur\",\r\n            required: true\r\n          }\r\n        ]\r\n      },\r\n      spinShow: false\r\n    };\r\n  },\r\n  methods: {\r\n    handleSubmit(name) {\r\n      this.$refs[name].validate(valid => {\r\n        if (valid) {\r\n          console.log(this.formValidate);\r\n\r\n          let params = {\r\n            name: this.formValidate.name,\r\n            email: this.formValidate.mail,\r\n            password: this.formValidate.psw\r\n          };\r\n          let headers = {\r\n            // \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n          };\r\n          this.spinShow = true;\r\n          try {\r\n            https\r\n              .fetchPost(\"/api/oauthUsers/register\", params, headers)\r\n              .then(data => {\r\n                if (data.data.msg == -1) {\r\n                  this.$Message.error(\"已存在该用户,请登录\");\r\n                  this.spinShow = false;\r\n                } else {\r\n                  this.$Message.success(\"已发到后台审核\");\r\n                  setTimeout(() => {\r\n                    this.$router.push({ path: \"/login\" });\r\n                  }, 1000);\r\n                }\r\n              })\r\n              .catch(err => {\r\n                console.log(err);\r\n              });\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        } else {\r\n          this.$Message.error(\"按照要求输入\");\r\n        }\r\n      });\r\n    },\r\n    handleRegister(name) {\r\n      this.$router.push({ path: \"/login\" });\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/views"}]}