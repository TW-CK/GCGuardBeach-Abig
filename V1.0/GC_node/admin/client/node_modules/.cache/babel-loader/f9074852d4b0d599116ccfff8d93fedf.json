{"remainingRequest":"F:\\Worker\\abig_GCGuardBeach\\V1.0\\GC_node\\client\\node_modules\\babel-loader\\lib\\index.js!F:\\Worker\\abig_GCGuardBeach\\V1.0\\GC_node\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\Worker\\abig_GCGuardBeach\\V1.0\\GC_node\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Worker\\abig_GCGuardBeach\\V1.0\\GC_node\\client\\src\\views\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\Worker\\abig_GCGuardBeach\\V1.0\\GC_node\\client\\src\\views\\Login.vue","mtime":1572148723837},{"path":"F:\\Worker\\abig_GCGuardBeach\\V1.0\\GC_node\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Worker\\abig_GCGuardBeach\\V1.0\\GC_node\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\Worker\\abig_GCGuardBeach\\V1.0\\GC_node\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Worker\\abig_GCGuardBeach\\V1.0\\GC_node\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport https from \"../https\";\nexport default {\n  data: function data() {\n    return {\n      formValidate: {\n        mail: \"\",\n        psw: \"\"\n      },\n      ruleValidate: {\n        mail: [{\n          required: true,\n          message: \"不能为空\",\n          trigger: \"blur\"\n        }, {\n          type: \"email\",\n          message: \"请输入正确邮箱\",\n          trigger: \"change\" | \"blur\"\n        }],\n        psw: [{\n          required: true,\n          message: \"密码不能为空\",\n          trigger: \"blur\"\n        }, {\n          type: \"string\",\n          min: 6,\n          message: \"长度必须大于6\",\n          trigger: \"change\" | \"blur\"\n        }, {\n          type: \"string\",\n          whitespace: true,\n          message: \"包含空白字符\",\n          trigger: \"change\" | \"blur\"\n        }]\n      },\n      spinShow: false\n    };\n  },\n  methods: {\n    handleSubmit: function handleSubmit(name) {\n      var _this = this;\n\n      this.$refs[name].validate(function (valid) {\n        if (valid) {\n          var params = {\n            email: _this.formValidate.mail,\n            password: _this.formValidate.psw\n          };\n          var headers = {// \"Content-Type\": \"application/x-www-form-urlencoded\"\n          };\n          _this.spinShow = true;\n\n          try {\n            https.fetchPost(\"/api/admins/login\", params, headers).then(function (data) {\n              if (data.data.token == undefined) {\n                if (data.data.msg == 0) {\n                  _this.$Message.error(\"用户不存在,请先注册\");\n                }\n\n                if (data.data.msg == -1) {\n                  _this.$Message.error(\"密码不正确\");\n\n                  _this.formValidate.psw = \"\";\n                }\n\n                if (data.data.msg == \"审核中\") {\n                  _this.$Message.error(\"审核中，请稍后重试\");\n                }\n              } else {\n                console.log(data.data.token);\n                localStorage.setItem(\"Token\", data.data.token);\n\n                _this.$Message.success(\"登录成功\");\n\n                setTimeout(function () {\n                  _this.$router.push({\n                    path: \"/\"\n                  });\n                }, 1000);\n              }\n\n              _this.spinShow = false;\n            }).catch(function (err) {\n              console.log(err);\n            });\n          } catch (err) {\n            console.log(err);\n          }\n        } else {\n          _this.$Message.error(\"请输入正确的邮箱或密码\");\n        }\n      });\n    },\n    handleRegister: function handleRegister(name) {\n      this.$router.push({\n        path: \"/register\"\n      });\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":"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","sourcesContent":["<style scoped>\r\n.login_form {\r\n  width: 30%;\r\n  margin: 10% auto;\r\n  padding-bottom: 50px;\r\n}\r\n.login_form .form {\r\n  position: relative;\r\n  top: 30px;\r\n}\r\n.login_form img {\r\n  width: 80%;\r\n  margin-left: 20px;\r\n}\r\n.login_form_01 {\r\n  font-size: 30px;\r\n  text-align: center;\r\n  margin-block-end: 30px;\r\n  font-family: \"PingFang SC\";\r\n}\r\n</style>>\r\n<template>\r\n  <div class=\"wrap\">\r\n    <Card class=\"login_form\">\r\n      <!-- <div class=\"login_form_01\">登录</div> -->\r\n      <p slot=\"title\">登录</p>\r\n      <img src=\"../assets/logo.png\" />\r\n\r\n      <div class=\"form\">\r\n        <Form ref=\"formValidate\" :model=\"formValidate\" :rules=\"ruleValidate\" :label-width=\"80\">\r\n          <FormItem label=\"邮箱\" prop=\"mail\">\r\n            <Input v-model=\"formValidate.mail\" placeholder=\"请输入您的邮箱\"></Input>\r\n          </FormItem>\r\n\r\n          <FormItem label=\"密码\" prop=\"psw\">\r\n            <Input type=\"password\" v-model=\"formValidate.psw\" placeholder=\"请输入您的密码\"></Input>\r\n          </FormItem>\r\n\r\n          <FormItem>\r\n            <Button type=\"primary\" @click=\"handleSubmit('formValidate')\">登录</Button>\r\n            <Button @click=\"handleRegister('formValidate')\" style=\"margin-left: 80px\">注册</Button>\r\n          </FormItem>\r\n        </Form>\r\n      </div>\r\n    </Card>\r\n    <Spin size=\"large\" fix v-if=\"spinShow\"></Spin>\r\n  </div>\r\n</template>\r\n<script>\r\nimport https from \"../https\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      formValidate: {\r\n        mail: \"\",\r\n        psw: \"\"\r\n      },\r\n      ruleValidate: {\r\n        mail: [\r\n          {\r\n            required: true,\r\n            message: \"不能为空\",\r\n            trigger: \"blur\"\r\n          },\r\n          {\r\n            type: \"email\",\r\n            message: \"请输入正确邮箱\",\r\n            trigger: \"change\" | \"blur\"\r\n          }\r\n        ],\r\n        psw: [\r\n          {\r\n            required: true,\r\n            message: \"密码不能为空\",\r\n            trigger: \"blur\"\r\n          },\r\n          {\r\n            type: \"string\",\r\n            min: 6,\r\n            message: \"长度必须大于6\",\r\n            trigger: \"change\" | \"blur\"\r\n          },\r\n          {\r\n            type: \"string\",\r\n            whitespace: true,\r\n            message: \"包含空白字符\",\r\n            trigger: \"change\" | \"blur\"\r\n          }\r\n        ]\r\n      },\r\n      spinShow: false\r\n    };\r\n  },\r\n  methods: {\r\n    handleSubmit(name) {\r\n      this.$refs[name].validate(valid => {\r\n        if (valid) {\r\n          let params = {\r\n            email: this.formValidate.mail,\r\n            password: this.formValidate.psw\r\n          };\r\n          let headers = {\r\n            // \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n          };\r\n          this.spinShow = true;\r\n          try {\r\n            https\r\n              .fetchPost(\"/api/admins/login\", params, headers)\r\n              .then(data => {\r\n                if (data.data.token == undefined) {\r\n                  if (data.data.msg == 0) {\r\n                    this.$Message.error(\"用户不存在,请先注册\");\r\n                  }\r\n                  if (data.data.msg == -1) {\r\n                    this.$Message.error(\"密码不正确\");\r\n                    this.formValidate.psw = \"\";\r\n                  }\r\n                  if (data.data.msg == \"审核中\") {\r\n                    this.$Message.error(\"审核中，请稍后重试\");\r\n                  }\r\n                } else {\r\n                  console.log(data.data.token)\r\n                  localStorage.setItem(\"Token\", data.data.token);\r\n                  this.$Message.success(\"登录成功\");\r\n                  setTimeout(() => {\r\n                    this.$router.push({ path: \"/\" });\r\n                  }, 1000);\r\n                }\r\n                this.spinShow = false;\r\n              })\r\n              .catch(err => {\r\n                console.log(err);\r\n              });\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        } else {\r\n          this.$Message.error(\"请输入正确的邮箱或密码\");\r\n        }\r\n      });\r\n    },\r\n    handleRegister(name) {\r\n      this.$router.push({ path: \"/register\" });\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/views"}]}