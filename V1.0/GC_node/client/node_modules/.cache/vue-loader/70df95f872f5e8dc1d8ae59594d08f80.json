{"remainingRequest":"F:\\Worker\\abig_GCGuardBeach\\V1.0\\GC_node\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Worker\\abig_GCGuardBeach\\V1.0\\GC_node\\client\\src\\views\\Login.vue?vue&type=style&index=0&id=26084dc2&scoped=true&lang=css&","dependencies":[{"path":"F:\\Worker\\abig_GCGuardBeach\\V1.0\\GC_node\\client\\src\\views\\Login.vue","mtime":1572148723837},{"path":"F:\\Worker\\abig_GCGuardBeach\\V1.0\\GC_node\\client\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"F:\\Worker\\abig_GCGuardBeach\\V1.0\\GC_node\\client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\Worker\\abig_GCGuardBeach\\V1.0\\GC_node\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\Worker\\abig_GCGuardBeach\\V1.0\\GC_node\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Worker\\abig_GCGuardBeach\\V1.0\\GC_node\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n.login_form {\r\n  width: 30%;\r\n  margin: 10% auto;\r\n  padding-bottom: 50px;\r\n}\r\n.login_form .form {\r\n  position: relative;\r\n  top: 30px;\r\n}\r\n.login_form img {\r\n  width: 80%;\r\n  margin-left: 20px;\r\n}\r\n.login_form_01 {\r\n  font-size: 30px;\r\n  text-align: center;\r\n  margin-block-end: 30px;\r\n  font-family: \"PingFang SC\";\r\n}\r\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<style scoped>\r\n.login_form {\r\n  width: 30%;\r\n  margin: 10% auto;\r\n  padding-bottom: 50px;\r\n}\r\n.login_form .form {\r\n  position: relative;\r\n  top: 30px;\r\n}\r\n.login_form img {\r\n  width: 80%;\r\n  margin-left: 20px;\r\n}\r\n.login_form_01 {\r\n  font-size: 30px;\r\n  text-align: center;\r\n  margin-block-end: 30px;\r\n  font-family: \"PingFang SC\";\r\n}\r\n</style>>\r\n<template>\r\n  <div class=\"wrap\">\r\n    <Card class=\"login_form\">\r\n      <!-- <div class=\"login_form_01\">登录</div> -->\r\n      <p slot=\"title\">登录</p>\r\n      <img src=\"../assets/logo.png\" />\r\n\r\n      <div class=\"form\">\r\n        <Form ref=\"formValidate\" :model=\"formValidate\" :rules=\"ruleValidate\" :label-width=\"80\">\r\n          <FormItem label=\"邮箱\" prop=\"mail\">\r\n            <Input v-model=\"formValidate.mail\" placeholder=\"请输入您的邮箱\"></Input>\r\n          </FormItem>\r\n\r\n          <FormItem label=\"密码\" prop=\"psw\">\r\n            <Input type=\"password\" v-model=\"formValidate.psw\" placeholder=\"请输入您的密码\"></Input>\r\n          </FormItem>\r\n\r\n          <FormItem>\r\n            <Button type=\"primary\" @click=\"handleSubmit('formValidate')\">登录</Button>\r\n            <Button @click=\"handleRegister('formValidate')\" style=\"margin-left: 80px\">注册</Button>\r\n          </FormItem>\r\n        </Form>\r\n      </div>\r\n    </Card>\r\n    <Spin size=\"large\" fix v-if=\"spinShow\"></Spin>\r\n  </div>\r\n</template>\r\n<script>\r\nimport https from \"../https\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      formValidate: {\r\n        mail: \"\",\r\n        psw: \"\"\r\n      },\r\n      ruleValidate: {\r\n        mail: [\r\n          {\r\n            required: true,\r\n            message: \"不能为空\",\r\n            trigger: \"blur\"\r\n          },\r\n          {\r\n            type: \"email\",\r\n            message: \"请输入正确邮箱\",\r\n            trigger: \"change\" | \"blur\"\r\n          }\r\n        ],\r\n        psw: [\r\n          {\r\n            required: true,\r\n            message: \"密码不能为空\",\r\n            trigger: \"blur\"\r\n          },\r\n          {\r\n            type: \"string\",\r\n            min: 6,\r\n            message: \"长度必须大于6\",\r\n            trigger: \"change\" | \"blur\"\r\n          },\r\n          {\r\n            type: \"string\",\r\n            whitespace: true,\r\n            message: \"包含空白字符\",\r\n            trigger: \"change\" | \"blur\"\r\n          }\r\n        ]\r\n      },\r\n      spinShow: false\r\n    };\r\n  },\r\n  methods: {\r\n    handleSubmit(name) {\r\n      this.$refs[name].validate(valid => {\r\n        if (valid) {\r\n          let params = {\r\n            email: this.formValidate.mail,\r\n            password: this.formValidate.psw\r\n          };\r\n          let headers = {\r\n            // \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n          };\r\n          this.spinShow = true;\r\n          try {\r\n            https\r\n              .fetchPost(\"/api/admins/login\", params, headers)\r\n              .then(data => {\r\n                if (data.data.token == undefined) {\r\n                  if (data.data.msg == 0) {\r\n                    this.$Message.error(\"用户不存在,请先注册\");\r\n                  }\r\n                  if (data.data.msg == -1) {\r\n                    this.$Message.error(\"密码不正确\");\r\n                    this.formValidate.psw = \"\";\r\n                  }\r\n                  if (data.data.msg == \"审核中\") {\r\n                    this.$Message.error(\"审核中，请稍后重试\");\r\n                  }\r\n                } else {\r\n                  console.log(data.data.token)\r\n                  localStorage.setItem(\"Token\", data.data.token);\r\n                  this.$Message.success(\"登录成功\");\r\n                  setTimeout(() => {\r\n                    this.$router.push({ path: \"/\" });\r\n                  }, 1000);\r\n                }\r\n                this.spinShow = false;\r\n              })\r\n              .catch(err => {\r\n                console.log(err);\r\n              });\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        } else {\r\n          this.$Message.error(\"请输入正确的邮箱或密码\");\r\n        }\r\n      });\r\n    },\r\n    handleRegister(name) {\r\n      this.$router.push({ path: \"/register\" });\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}